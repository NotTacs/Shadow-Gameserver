#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SafeZoneIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SafeZoneIndicator.SafeZoneIndicator_C
// 0x02A8 (0x0710 - 0x0468)
class ASafeZoneIndicator_C final : public AFortSafeZoneIndicator
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Fish_Circle;                                     // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SafeZoneMeshOuter;                                 // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  SafeZoneWaterPPV;                                  // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SafeZoneWaterEdgeFoam;                             // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SafeZoneWaterPlane;                                // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_StormMeshRotator;                               // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C; // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C; // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Pre_Damage_Audio_Ramp;                             // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C; // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     StormFadeTimeline;                                 // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ShieldBoundaryLoopSound;                           // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HoldingLoopSound;                                  // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingStartTime_0;                                // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             HoldingLoopTickSound;                              // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SafeZoneMID;                                       // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           MegaStormDamageTimer;                              // 0x04E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MegastormAudioDuration;                            // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSafeZoneStateChangeDispatcher;                   // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector                                CloudOffsetStart;                                  // 0x0508(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CloudScale;                                        // 0x0514(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReverseRotation;                                   // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CloudOffsetEnd;                                    // 0x0524(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormRotation;                                     // 0x0530(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortSafeZoneState                            SafeZoneState;                                     // 0x0534(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EFortSafeZoneState, struct FVector2D>    SafeZoneStateThunderFreqs;                         // 0x0538(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TMap<EFortSafeZoneState, float>               SafeZoneStateThunderDuration;                      // 0x0588(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          OceanEnabled;                                      // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D9[0x3];                                      // 0x05D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OceanActive;                                       // 0x05DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         NewParticles;                                      // 0x05E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             NewPlaneEdge;                                      // 0x0608(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             NewPlane;                                          // 0x0630(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAmbientAudioDataAsset>  NewAudio;                                          // 0x0658(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UAmbientAudioDataAsset*                 AmbientAudio;                                      // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     InnerMaterial;                                     // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OuterMaterial;                                     // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      NewOuterMaterial;                                  // 0x0698(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      NewInnerMaterial;                                  // 0x06C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundBase>              NewAudio2;                                         // 0x06E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void OnSafeZoneStateChangeDispatcher__DelegateSignature(EFortSafeZoneState Param_SafeZoneState);
	void ExecuteUbergraph_SafeZoneIndicator(int32 EntryPoint);
	void AsyncDoneShowOcean();
	void AsyncLoadNewStuff();
	void OnSettingsChange();
	void DebugWaterwallGameplay();
	void HideOcean();
	void ShowOcean();
	void ResetSafeZoneScale();
	void ReceiveBeginPlay();
	void OnSafeZoneStateChange(EFortSafeZoneState NewState, bool bInitial);
	void Stop_Distant_Storm_Oneshots();
	void Trigger_Distant_Storm_Oneshot();
	void Play_Storm_Grow_Audio();
	void ReceiveTick(float DeltaSeconds);
	void Start_Megastorm_Audio();
	void Megastorm_Pre_Damage_Tell();
	void OnBeginStartingStateEffectsEvent();
	void ReceiveDestroyed();
	void Stormy(float NewParam);
	void OnLoaded_94AEDA90452B8E798E3A86A2EB6E83A9(class UObject* Loaded);
	void OnLoaded_806DBF5E46623779F0B8EEAD50EF3A6A(class UObject* Loaded);
	void OnLoaded_383982B6463E1A633D7A6EB13333EB64(class UObject* Loaded);
	void OnLoaded_5257722B4EBB4B461227A1B22C5B9C23(class UObject* Loaded);
	void OnLoaded_6C77D3F54DD3F4887A81459455F4598F(class UObject* Loaded);
	void OnLoaded_5DC9D34A4B1B466135B76387B0E4F793(class UObject* Loaded);
	void OnLoaded_6B7CC18A4B394F8E94D9EC8CCEDD3168(class UObject* Loaded);
	void OnReady_D7B1C93D4FDF49E35B211397FC807B11(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void StormFadeTimeline__UpdateFunc();
	void StormFadeTimeline__FinishedFunc();
	void Pre_Damage_Audio_Ramp__UpdateFunc();
	void Pre_Damage_Audio_Ramp__FinishedFunc();
	void UserConstructionScript();
	void InitClosestPointAudio();
	void HandleInsideOutsideMix();
	void GetAthenaGameState(class AAthena_GameState_C** AthenaGS);
	void GetRandomPointOnBoundary(struct FVector* Position);
	void GetRandomPointInPlayerDir(struct FVector* Position);
	void OnRep_OceanActive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SafeZoneIndicator_C">();
	}
	static class ASafeZoneIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASafeZoneIndicator_C>();
	}
};
static_assert(alignof(ASafeZoneIndicator_C) == 0x000008, "Wrong alignment on ASafeZoneIndicator_C");
static_assert(sizeof(ASafeZoneIndicator_C) == 0x000710, "Wrong size on ASafeZoneIndicator_C");
static_assert(offsetof(ASafeZoneIndicator_C, UberGraphFrame) == 0x000468, "Member 'ASafeZoneIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, P_Fish_Circle) == 0x000470, "Member 'ASafeZoneIndicator_C::P_Fish_Circle' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneMeshOuter) == 0x000478, "Member 'ASafeZoneIndicator_C::SafeZoneMeshOuter' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneWaterPPV) == 0x000480, "Member 'ASafeZoneIndicator_C::SafeZoneWaterPPV' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneWaterEdgeFoam) == 0x000488, "Member 'ASafeZoneIndicator_C::SafeZoneWaterEdgeFoam' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneWaterPlane) == 0x000490, "Member 'ASafeZoneIndicator_C::SafeZoneWaterPlane' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, BP_StormMeshRotator) == 0x000498, "Member 'ASafeZoneIndicator_C::BP_StormMeshRotator' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C) == 0x0004A0, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp_Intensity_05A077AD4FED08F2426E5CA16BD41D7C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C) == 0x0004A4, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp__Direction_05A077AD4FED08F2426E5CA16BD41D7C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, Pre_Damage_Audio_Ramp) == 0x0004A8, "Member 'ASafeZoneIndicator_C::Pre_Damage_Audio_Ramp' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C) == 0x0004B0, "Member 'ASafeZoneIndicator_C::StormFadeTimeline_StormFadeIn_6FB75EFB416FB419D85F8797DEDD058C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C) == 0x0004B4, "Member 'ASafeZoneIndicator_C::StormFadeTimeline__Direction_6FB75EFB416FB419D85F8797DEDD058C' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormFadeTimeline) == 0x0004B8, "Member 'ASafeZoneIndicator_C::StormFadeTimeline' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, ShieldBoundaryLoopSound) == 0x0004C0, "Member 'ASafeZoneIndicator_C::ShieldBoundaryLoopSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingLoopSound) == 0x0004C8, "Member 'ASafeZoneIndicator_C::HoldingLoopSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingStartTime_0) == 0x0004D0, "Member 'ASafeZoneIndicator_C::HoldingStartTime_0' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, HoldingLoopTickSound) == 0x0004D8, "Member 'ASafeZoneIndicator_C::HoldingLoopTickSound' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneMID) == 0x0004E0, "Member 'ASafeZoneIndicator_C::SafeZoneMID' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, MegaStormDamageTimer) == 0x0004E8, "Member 'ASafeZoneIndicator_C::MegaStormDamageTimer' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, MegastormAudioDuration) == 0x0004F0, "Member 'ASafeZoneIndicator_C::MegastormAudioDuration' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OnSafeZoneStateChangeDispatcher) == 0x0004F8, "Member 'ASafeZoneIndicator_C::OnSafeZoneStateChangeDispatcher' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, CloudOffsetStart) == 0x000508, "Member 'ASafeZoneIndicator_C::CloudOffsetStart' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, CloudScale) == 0x000514, "Member 'ASafeZoneIndicator_C::CloudScale' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, ReverseRotation) == 0x000520, "Member 'ASafeZoneIndicator_C::ReverseRotation' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, CloudOffsetEnd) == 0x000524, "Member 'ASafeZoneIndicator_C::CloudOffsetEnd' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, StormRotation) == 0x000530, "Member 'ASafeZoneIndicator_C::StormRotation' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneState) == 0x000534, "Member 'ASafeZoneIndicator_C::SafeZoneState' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneStateThunderFreqs) == 0x000538, "Member 'ASafeZoneIndicator_C::SafeZoneStateThunderFreqs' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, SafeZoneStateThunderDuration) == 0x000588, "Member 'ASafeZoneIndicator_C::SafeZoneStateThunderDuration' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OceanEnabled) == 0x0005D8, "Member 'ASafeZoneIndicator_C::OceanEnabled' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OceanActive) == 0x0005DC, "Member 'ASafeZoneIndicator_C::OceanActive' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewParticles) == 0x0005E0, "Member 'ASafeZoneIndicator_C::NewParticles' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewPlaneEdge) == 0x000608, "Member 'ASafeZoneIndicator_C::NewPlaneEdge' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewPlane) == 0x000630, "Member 'ASafeZoneIndicator_C::NewPlane' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewAudio) == 0x000658, "Member 'ASafeZoneIndicator_C::NewAudio' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, AmbientAudio) == 0x000680, "Member 'ASafeZoneIndicator_C::AmbientAudio' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, InnerMaterial) == 0x000688, "Member 'ASafeZoneIndicator_C::InnerMaterial' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, OuterMaterial) == 0x000690, "Member 'ASafeZoneIndicator_C::OuterMaterial' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewOuterMaterial) == 0x000698, "Member 'ASafeZoneIndicator_C::NewOuterMaterial' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewInnerMaterial) == 0x0006C0, "Member 'ASafeZoneIndicator_C::NewInnerMaterial' has a wrong offset!");
static_assert(offsetof(ASafeZoneIndicator_C, NewAudio2) == 0x0006E8, "Member 'ASafeZoneIndicator_C::NewAudio2' has a wrong offset!");

}

