#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveStreamAnimation

#include "Basic.hpp"

#include "LiveStreamAnimation_structs.hpp"


namespace SDK::Params
{

// Function LiveStreamAnimation.LiveStreamAnimationSubsystem.SetRole
// 0x0001 (0x0001 - 0x0000)
struct LiveStreamAnimationSubsystem_SetRole final
{
public:
	ELiveStreamAnimationRole                      NewRole;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveStreamAnimationSubsystem_SetRole) == 0x000001, "Wrong alignment on LiveStreamAnimationSubsystem_SetRole");
static_assert(sizeof(LiveStreamAnimationSubsystem_SetRole) == 0x000001, "Wrong size on LiveStreamAnimationSubsystem_SetRole");
static_assert(offsetof(LiveStreamAnimationSubsystem_SetRole, NewRole) == 0x000000, "Member 'LiveStreamAnimationSubsystem_SetRole::NewRole' has a wrong offset!");

// Function LiveStreamAnimation.LiveStreamAnimationSubsystem.StartTrackingLiveLinkSubject
// 0x0014 (0x0014 - 0x0000)
struct LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject final
{
public:
	class FName                                   LiveLinkSubject;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RegisteredName;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLiveStreamAnimationLiveLinkSourceOptions Options;                                           // 0x0010(0x0001)(ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject) == 0x000004, "Wrong alignment on LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject");
static_assert(sizeof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject) == 0x000014, "Wrong size on LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject");
static_assert(offsetof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject, LiveLinkSubject) == 0x000000, "Member 'LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject::LiveLinkSubject' has a wrong offset!");
static_assert(offsetof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject, RegisteredName) == 0x000008, "Member 'LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject::RegisteredName' has a wrong offset!");
static_assert(offsetof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject, Options) == 0x000010, "Member 'LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject::Options' has a wrong offset!");
static_assert(offsetof(LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject, ReturnValue) == 0x000011, "Member 'LiveStreamAnimationSubsystem_StartTrackingLiveLinkSubject::ReturnValue' has a wrong offset!");

// Function LiveStreamAnimation.LiveStreamAnimationSubsystem.StopTrackingLiveLinkSubject
// 0x0008 (0x0008 - 0x0000)
struct LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject final
{
public:
	class FName                                   RegisteredName;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject) == 0x000004, "Wrong alignment on LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject");
static_assert(sizeof(LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject) == 0x000008, "Wrong size on LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject");
static_assert(offsetof(LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject, RegisteredName) == 0x000000, "Member 'LiveStreamAnimationSubsystem_StopTrackingLiveLinkSubject::RegisteredName' has a wrong offset!");

// Function LiveStreamAnimation.LiveStreamAnimationSubsystem.GetRole
// 0x0001 (0x0001 - 0x0000)
struct LiveStreamAnimationSubsystem_GetRole final
{
public:
	ELiveStreamAnimationRole                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveStreamAnimationSubsystem_GetRole) == 0x000001, "Wrong alignment on LiveStreamAnimationSubsystem_GetRole");
static_assert(sizeof(LiveStreamAnimationSubsystem_GetRole) == 0x000001, "Wrong size on LiveStreamAnimationSubsystem_GetRole");
static_assert(offsetof(LiveStreamAnimationSubsystem_GetRole, ReturnValue) == 0x000000, "Member 'LiveStreamAnimationSubsystem_GetRole::ReturnValue' has a wrong offset!");

// Function LiveStreamAnimation.LiveLinkTestSkelMeshTrackerComponent.StartTrackingSkelMesh
// 0x0010 (0x0010 - 0x0000)
struct LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh final
{
public:
	class USkeletalMeshComponent*                 InSkelMeshComp;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InSubjectName;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh) == 0x000008, "Wrong alignment on LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh");
static_assert(sizeof(LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh) == 0x000010, "Wrong size on LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh");
static_assert(offsetof(LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh, InSkelMeshComp) == 0x000000, "Member 'LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh::InSkelMeshComp' has a wrong offset!");
static_assert(offsetof(LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh, InSubjectName) == 0x000008, "Member 'LiveLinkTestSkelMeshTrackerComponent_StartTrackingSkelMesh::InSubjectName' has a wrong offset!");

}

