#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaLocker_ItemInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AthenaLocker_ItemInfo.AthenaLocker_ItemInfo_C.ExecuteUbergraph_AthenaLocker_ItemInfo
// 0x0068 (0x0068 - 0x0000)
struct AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    K2Node_CustomEvent__item_definition;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      CallFunc_GetRarityOrSeriesColors_ReturnValue;      // 0x0014(0x0050)(NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo) == 0x000008, "Wrong alignment on AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo");
static_assert(sizeof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo) == 0x000068, "Wrong size on AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, EntryPoint) == 0x000000, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, Temp_byte_Variable) == 0x000004, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, K2Node_CustomEvent__item_definition) == 0x000008, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::K2Node_CustomEvent__item_definition' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, CallFunc_GetRarity_ReturnValue) == 0x000010, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, CallFunc_GetRarityOrSeriesColors_ReturnValue) == 0x000014, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::CallFunc_GetRarityOrSeriesColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, Temp_byte_Variable_1) == 0x000064, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, Temp_bool_Variable) == 0x000065, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo, K2Node_Select_Default) == 0x000066, "Member 'AthenaLocker_ItemInfo_C_ExecuteUbergraph_AthenaLocker_ItemInfo::K2Node_Select_Default' has a wrong offset!");

// Function AthenaLocker_ItemInfo.AthenaLocker_ItemInfo_C.Set item definition
// 0x0008 (0x0008 - 0x0000)
struct AthenaLocker_ItemInfo_C_Set_item_definition final
{
public:
	class UFortItemDefinition*                    _item_definition;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaLocker_ItemInfo_C_Set_item_definition) == 0x000008, "Wrong alignment on AthenaLocker_ItemInfo_C_Set_item_definition");
static_assert(sizeof(AthenaLocker_ItemInfo_C_Set_item_definition) == 0x000008, "Wrong size on AthenaLocker_ItemInfo_C_Set_item_definition");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Set_item_definition, _item_definition) == 0x000000, "Member 'AthenaLocker_ItemInfo_C_Set_item_definition::_item_definition' has a wrong offset!");

// Function AthenaLocker_ItemInfo.AthenaLocker_ItemInfo_C.Overide Item Info
// 0x00C0 (0x00C0 - 0x0000)
struct AthenaLocker_ItemInfo_C_Overide_Item_Info final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Type;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EFortRarity                                   Rarity;                                            // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Rarity;                                       // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortColorPalette                      CallFunc_BPGetRarityColorPalette_ReturnValue;      // 0x004C(0x0050)(NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00A0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaLocker_ItemInfo_C_Overide_Item_Info) == 0x000008, "Wrong alignment on AthenaLocker_ItemInfo_C_Overide_Item_Info");
static_assert(sizeof(AthenaLocker_ItemInfo_C_Overide_Item_Info) == 0x0000C0, "Wrong size on AthenaLocker_ItemInfo_C_Overide_Item_Info");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Param_Name) == 0x000000, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Param_Name' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Type) == 0x000018, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Type' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Description) == 0x000030, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Description' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Rarity) == 0x000048, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Rarity' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Hide_Rarity) == 0x000049, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Hide_Rarity' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, CallFunc_BPGetRarityColorPalette_ReturnValue) == 0x00004C, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::CallFunc_BPGetRarityColorPalette_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, CallFunc_TextToUpper_ReturnValue) == 0x0000A0, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Temp_byte_Variable) == 0x0000B8, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Temp_byte_Variable_1) == 0x0000B9, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, Temp_bool_Variable) == 0x0000BA, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_Overide_Item_Info, K2Node_Select_Default) == 0x0000BB, "Member 'AthenaLocker_ItemInfo_C_Overide_Item_Info::K2Node_Select_Default' has a wrong offset!");

// Function AthenaLocker_ItemInfo.AthenaLocker_ItemInfo_C.UpdateRarityWidgets
// 0x0098 (0x0098 - 0x0000)
struct AthenaLocker_ItemInfo_C_UpdateRarityWidgets final
{
public:
	struct FFortColorPalette                      InColor;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	EFortRarity                                   InRarity;                                          // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemSeriesDefinition*              InSeries;                                          // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideRarity;                                        // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNullItem_Is_Null_Item;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNullItem_Is_Null_Item_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNullItem_Is_Null_Item_2;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets) == 0x000008, "Wrong alignment on AthenaLocker_ItemInfo_C_UpdateRarityWidgets");
static_assert(sizeof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets) == 0x000098, "Wrong size on AthenaLocker_ItemInfo_C_UpdateRarityWidgets");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, InColor) == 0x000000, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::InColor' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, InRarity) == 0x000050, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::InRarity' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, InSeries) == 0x000058, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::InSeries' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, HideRarity) == 0x000060, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::HideRarity' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, CallFunc_IsNullItem_Is_Null_Item) == 0x000061, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::CallFunc_IsNullItem_Is_Null_Item' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, CallFunc_IsNullItem_Is_Null_Item_1) == 0x000062, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::CallFunc_IsNullItem_Is_Null_Item_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, CallFunc_IsNullItem_Is_Null_Item_2) == 0x000063, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::CallFunc_IsNullItem_Is_Null_Item_2' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, Temp_bool_Variable) == 0x000064, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, K2Node_SwitchEnum_CmpSuccess) == 0x000065, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, K2Node_Select_Default) == 0x000068, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, Temp_bool_Variable_1) == 0x000078, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, Temp_byte_Variable) == 0x000079, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, K2Node_Select_Default_1) == 0x00007C, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, Temp_byte_Variable_1) == 0x00008C, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, Temp_bool_Variable_2) == 0x00008D, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, K2Node_Select_Default_2) == 0x00008E, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AthenaLocker_ItemInfo_C_UpdateRarityWidgets, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000090, "Member 'AthenaLocker_ItemInfo_C_UpdateRarityWidgets::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

}

