#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LiveStreamAnimation

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "LiveStreamAnimation_structs.hpp"


namespace SDK
{

// Class LiveStreamAnimation.LiveStreamAnimationChannel
// 0x0010 (0x0080 - 0x0070)
class ULiveStreamAnimationChannel final : public UChannel
{
public:
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationChannel">();
	}
	static class ULiveStreamAnimationChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationChannel>();
	}
};
static_assert(alignof(ULiveStreamAnimationChannel) == 0x000008, "Wrong alignment on ULiveStreamAnimationChannel");
static_assert(sizeof(ULiveStreamAnimationChannel) == 0x000080, "Wrong size on ULiveStreamAnimationChannel");

// Class LiveStreamAnimation.LiveStreamAnimationSubsystem
// 0x0060 (0x0090 - 0x0030)
class ULiveStreamAnimationSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           HandleNames;                                       // 0x0050(0x0010)(ZeroConstructor, Transient, Config, NativeAccessSpecifierPrivate)
	bool                                          bEnabled;                                          // 0x0060(0x0001)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_61[0x2F];                                      // 0x0061(0x002F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetRole(const ELiveStreamAnimationRole NewRole);
	bool StartTrackingLiveLinkSubject(const class FName LiveLinkSubject, const class FName RegisteredName, const struct FLiveStreamAnimationLiveLinkSourceOptions& Options);
	void StopTrackingLiveLinkSubject(const class FName RegisteredName);

	ELiveStreamAnimationRole GetRole() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveStreamAnimationSubsystem">();
	}
	static class ULiveStreamAnimationSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveStreamAnimationSubsystem>();
	}
};
static_assert(alignof(ULiveStreamAnimationSubsystem) == 0x000008, "Wrong alignment on ULiveStreamAnimationSubsystem");
static_assert(sizeof(ULiveStreamAnimationSubsystem) == 0x000090, "Wrong size on ULiveStreamAnimationSubsystem");
static_assert(offsetof(ULiveStreamAnimationSubsystem, HandleNames) == 0x000050, "Member 'ULiveStreamAnimationSubsystem::HandleNames' has a wrong offset!");
static_assert(offsetof(ULiveStreamAnimationSubsystem, bEnabled) == 0x000060, "Member 'ULiveStreamAnimationSubsystem::bEnabled' has a wrong offset!");

// Class LiveStreamAnimation.LiveLinkTestSkelMeshTrackerComponent
// 0x0020 (0x00D0 - 0x00B0)
class ULiveLinkTestSkelMeshTrackerComponent final : public UActorComponent
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x00B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B8[0x18];                                      // 0x00B8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartTrackingSkelMesh(class USkeletalMeshComponent* InSkelMeshComp, class FName InSubjectName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LiveLinkTestSkelMeshTrackerComponent">();
	}
	static class ULiveLinkTestSkelMeshTrackerComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULiveLinkTestSkelMeshTrackerComponent>();
	}
};
static_assert(alignof(ULiveLinkTestSkelMeshTrackerComponent) == 0x000008, "Wrong alignment on ULiveLinkTestSkelMeshTrackerComponent");
static_assert(sizeof(ULiveLinkTestSkelMeshTrackerComponent) == 0x0000D0, "Wrong size on ULiveLinkTestSkelMeshTrackerComponent");
static_assert(offsetof(ULiveLinkTestSkelMeshTrackerComponent, SkelMeshComp) == 0x0000B0, "Member 'ULiveLinkTestSkelMeshTrackerComponent::SkelMeshComp' has a wrong offset!");

}

