#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpecialLayer_Swim

#include "Basic.hpp"

#include "SpecialLayer_Swim_classes.hpp"
#include "SpecialLayer_Swim_parameters.hpp"


namespace SDK
{

// Function SpecialLayer_Swim.SpecialLayer_Swim_C.ExecuteUbergraph_SpecialLayer_Swim
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpecialLayer_Swim_C::ExecuteUbergraph_SpecialLayer_Swim(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "ExecuteUbergraph_SpecialLayer_Swim");

	Params::SpecialLayer_Swim_C_ExecuteUbergraph_SpecialLayer_Swim Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Swim_Start_FullyBlended
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Swim_Start_FullyBlended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Swim_Start_FullyBlended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Idle_Exited
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Idle_Exited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Idle_Exited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Idle_FullyBlended
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Idle_FullyBlended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Idle_FullyBlended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.UW_Swim_Start_Entered
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::UW_Swim_Start_Entered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "UW_Swim_Start_Entered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Swim_Start_Entered
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Swim_Start_Entered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Swim_Start_Entered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.UW_Swim_Stop_Exited
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::UW_Swim_Stop_Exited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "UW_Swim_Stop_Exited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.UW_Swim_Stop_FullyBlended
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::UW_Swim_Stop_FullyBlended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "UW_Swim_Stop_FullyBlended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.UW_Swim_Stop_Entered
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::UW_Swim_Stop_Entered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "UW_Swim_Stop_Entered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Swim_Stop_Exited
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Swim_Stop_Exited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Swim_Stop_Exited");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Swim_Stop_FullyBlended
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Swim_Stop_FullyBlended()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Swim_Stop_FullyBlended");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimNotify_UW_Swim_Stop_Entered
// (BlueprintCallable, BlueprintEvent)

void USpecialLayer_Swim_C::AnimNotify_UW_Swim_Stop_Entered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimNotify_UW_Swim_Stop_Entered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.UpdateValuesFromCameraManager_Implementation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCameraManager*             CameraManager                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USpecialLayer_Swim_C::UpdateValuesFromCameraManager_Implementation(class APlayerCameraManager* CameraManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "UpdateValuesFromCameraManager_Implementation");

	Params::SpecialLayer_Swim_C_UpdateValuesFromCameraManager_Implementation Parms{};

	Parms.CameraManager = CameraManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void USpecialLayer_Swim_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "AnimGraph");

	Params::SpecialLayer_Swim_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.CustomLocomotionFullBodyLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        PassThroughCustomFullBody                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_CustomLocomotionFullBodyLayer                    (Parm, OutParm, NoDestructor)

void USpecialLayer_Swim_C::CustomLocomotionFullBodyLayer(const struct FPoseLink& PassThroughCustomFullBody, struct FPoseLink* Param_CustomLocomotionFullBodyLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "CustomLocomotionFullBodyLayer");

	Params::SpecialLayer_Swim_C_CustomLocomotionFullBodyLayer Parms{};

	Parms.PassThroughCustomFullBody = std::move(PassThroughCustomFullBody);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CustomLocomotionFullBodyLayer != nullptr)
		*Param_CustomLocomotionFullBodyLayer = std::move(Parms.Param_CustomLocomotionFullBodyLayer);
}


// Function SpecialLayer_Swim.SpecialLayer_Swim_C.CustomLocomotionPreIKLayer
// (HasOutParams, BlueprintCallable)
// Parameters:
// struct FPoseLink                        InPosePreIK                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FPoseLink                        Param_CustomLocomotionPreIKLayer                       (Parm, OutParm, NoDestructor)

void USpecialLayer_Swim_C::CustomLocomotionPreIKLayer(const struct FPoseLink& InPosePreIK, struct FPoseLink* Param_CustomLocomotionPreIKLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecialLayer_Swim_C", "CustomLocomotionPreIKLayer");

	Params::SpecialLayer_Swim_C_CustomLocomotionPreIKLayer Parms{};

	Parms.InPosePreIK = std::move(InPosePreIK);

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CustomLocomotionPreIKLayer != nullptr)
		*Param_CustomLocomotionPreIKLayer = std::move(Parms.Param_CustomLocomotionPreIKLayer);
}

}

