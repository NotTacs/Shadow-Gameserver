#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_SneakySnowmanV2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_SneakySnowmanV2.Athena_Prop_SneakySnowmanV2_C
// 0x0108 (0x0CA0 - 0x0B98)
class AAthena_Prop_SneakySnowmanV2_C : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      OverlapCheck;                                      // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC; // 0x0BAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAD[0x3];                                      // 0x0BAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0BB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_ApplyEnemySnowman;                              // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ShouldSnowmanEnemies;                              // 0x0BC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPickupAthena*                      PickupAthena;                                      // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Ignored_Actors;                                    // 0x0BE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<EObjectTypeQuery>                      LineTraceObjects;                                  // 0x0BF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          DestroyAfterHit;                                   // 0x0C08(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C09[0x3];                                      // 0x0C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialGravityScale;                               // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamestateLoaded;                                   // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x0C18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FScalableFloat                         FallHeightToDestroy;                               // 0x0C28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ShouldSpawnSnowball;                               // 0x0C48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Dead;                                              // 0x0C68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C69[0x3];                                      // 0x0C69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartLocation;                                     // 0x0C6C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0C78(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ApplicationEffect;                                 // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Jumpinto;                                          // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             JumpInSound;                                       // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Athena_Prop_SneakySnowmanV2(int32 EntryPoint);
	void Timeout();
	void SpawnParticlesMulticast();
	void SpawnParticles();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnTookSneakySnowman();
	void DisableCollision();
	void OnStartedJumpingIn();
	void MovePlayer(class AActor* Player);
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted);
	void WorldPropSupportDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void WobbleAnims();
	void PlaylistLoaded(class FName PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	void BndEvt__OverlapCheck_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveBeginPlay();
	void OnGaveSneakySnowman();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void OnRep_bSimulationRunning();
	void TraceStartAndEnd(struct FVector* Start, struct FVector* End);
	void GetNewSnowmanTransform(struct FTransform* Transform);
	void GetMaterialInt(int32* MatInt);

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted, const ETInteractionType InteractionType) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn, const EInteractionBeingAttempted InteractionBeingAttempted) const;
	bool BlueprintGetInteractionTime(const class AFortPawn* InteractingPawn, float* OutInteractionTime, const EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_SneakySnowmanV2_C">();
	}
	static class AAthena_Prop_SneakySnowmanV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_SneakySnowmanV2_C>();
	}
};
static_assert(alignof(AAthena_Prop_SneakySnowmanV2_C) == 0x000008, "Wrong alignment on AAthena_Prop_SneakySnowmanV2_C");
static_assert(sizeof(AAthena_Prop_SneakySnowmanV2_C) == 0x000CA0, "Wrong size on AAthena_Prop_SneakySnowmanV2_C");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, UberGraphFrame) == 0x000B98, "Member 'AAthena_Prop_SneakySnowmanV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, OverlapCheck) == 0x000BA0, "Member 'AAthena_Prop_SneakySnowmanV2_C::OverlapCheck' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC) == 0x000BA8, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0_RotationAlpha_4116426F45EB954F1A0ACDA6058E6CCC' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC) == 0x000BAC, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0__Direction_4116426F45EB954F1A0ACDA6058E6CCC' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Timeline_0) == 0x000BB0, "Member 'AAthena_Prop_SneakySnowmanV2_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, GE_ApplyEnemySnowman) == 0x000BB8, "Member 'AAthena_Prop_SneakySnowmanV2_C::GE_ApplyEnemySnowman' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ShouldSnowmanEnemies) == 0x000BC0, "Member 'AAthena_Prop_SneakySnowmanV2_C::ShouldSnowmanEnemies' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, PickupAthena) == 0x000BE0, "Member 'AAthena_Prop_SneakySnowmanV2_C::PickupAthena' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Ignored_Actors) == 0x000BE8, "Member 'AAthena_Prop_SneakySnowmanV2_C::Ignored_Actors' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, LineTraceObjects) == 0x000BF8, "Member 'AAthena_Prop_SneakySnowmanV2_C::LineTraceObjects' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, DestroyAfterHit) == 0x000C08, "Member 'AAthena_Prop_SneakySnowmanV2_C::DestroyAfterHit' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, InitialGravityScale) == 0x000C0C, "Member 'AAthena_Prop_SneakySnowmanV2_C::InitialGravityScale' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, GamestateLoaded) == 0x000C10, "Member 'AAthena_Prop_SneakySnowmanV2_C::GamestateLoaded' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ObjectTypes) == 0x000C18, "Member 'AAthena_Prop_SneakySnowmanV2_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, FallHeightToDestroy) == 0x000C28, "Member 'AAthena_Prop_SneakySnowmanV2_C::FallHeightToDestroy' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ShouldSpawnSnowball) == 0x000C48, "Member 'AAthena_Prop_SneakySnowmanV2_C::ShouldSpawnSnowball' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Dead) == 0x000C68, "Member 'AAthena_Prop_SneakySnowmanV2_C::Dead' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, StartLocation) == 0x000C6C, "Member 'AAthena_Prop_SneakySnowmanV2_C::StartLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, EndLocation) == 0x000C78, "Member 'AAthena_Prop_SneakySnowmanV2_C::EndLocation' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, ApplicationEffect) == 0x000C88, "Member 'AAthena_Prop_SneakySnowmanV2_C::ApplicationEffect' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, Jumpinto) == 0x000C90, "Member 'AAthena_Prop_SneakySnowmanV2_C::Jumpinto' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SneakySnowmanV2_C, JumpInSound) == 0x000C98, "Member 'AAthena_Prop_SneakySnowmanV2_C::JumpInSound' has a wrong offset!");

}

