#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_AppleSun_Apple_Athena

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_AppleSun_Apple_Athena.BGA_AppleSun_Apple_Athena_C
// 0x0338 (0x0AC8 - 0x0790)
class ABGA_AppleSun_Apple_Athena_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0790(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          PlayerDetector;                                    // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Applesun_Activate;                                 // 0x07A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AppleSun_Warning_Loop_01;                          // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SidesPawnBlocker;                                  // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pad;                                               // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_AppleSun_Spawn;                                  // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_AppleSun_DespawnTell;                            // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4; // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4; // 0x07E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5[0x3];                                      // 0x07E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BeginDeflate;                                      // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172;    // 0x07F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172;  // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172; // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Destroy;                                           // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GrowthStart;                                       // 0x0810(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          OverlapLaunchesActivated;                          // 0x0830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LaunchCurve;                                       // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LifespanTimer;                                     // 0x0840(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimeoutTellTimer;                                  // 0x0848(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LaunchAngleWeight;                                 // 0x0850(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartScale;                                        // 0x0858(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpawnFeedbackGC;                                   // 0x0864(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeathFeedbackGC;                                   // 0x086C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  T_Quest_AppleSun_Use;                              // 0x0878(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                WaterLocation;                                     // 0x0898(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BounceLocation;                                    // 0x08A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewVar_0;                                          // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         GrowthEnd;                                         // 0x08B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinLaunch;                                         // 0x08D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxLaunch;                                         // 0x08F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleLaunchMultiplierXY;                         // 0x0918(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         VehicleLaunchMultiplierZ;                          // 0x0938(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileLaunchMultiplierXY;                      // 0x0958(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ProjectileLaunchMultiplierZ;                       // 0x0978(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Lifespan_;                                         // 0x0998(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         TimeoutTellDuration_;                              // 0x09B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HorizontalLaunch;                                  // 0x09D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinNonPawnVelocity;                                // 0x09F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxNonPawnVelocity;                                // 0x09FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LinkedActor;                                       // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AFortPlayerPawn*, float>           TrackedPlayers;                                    // 0x0A08(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_CrashpadPlus;                                   // 0x0A58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinLaunch_CrashpadPlus;                            // 0x0A78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxLaunch_CrashpadPlus;                            // 0x0A98(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LastBounceTime;                                    // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABC[0x4];                                      // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        LastBouncedPlayer;                                 // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_AppleSun_Apple_Athena(int32 EntryPoint);
	void CatchObjectsInside();
	void BndEvt__PlayerDetector_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__PlayerDetector_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature();
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void DestroyPad();
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DespawnTell();
	void BounceMulticast(const struct FVector& Position, const float BounceIntensity);
	void ReceiveBeginPlay();
	void Destroy__UpdateFunc();
	void Destroy__FinishedFunc();
	void BeginDeflate__UpdateFunc();
	void BeginDeflate__FinishedFunc();
	void UserConstructionScript();
	void CheckForSpyPerk(bool* HasPerk);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_AppleSun_Apple_Athena_C">();
	}
	static class ABGA_AppleSun_Apple_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_AppleSun_Apple_Athena_C>();
	}
};
static_assert(alignof(ABGA_AppleSun_Apple_Athena_C) == 0x000008, "Wrong alignment on ABGA_AppleSun_Apple_Athena_C");
static_assert(sizeof(ABGA_AppleSun_Apple_Athena_C) == 0x000AC8, "Wrong size on ABGA_AppleSun_Apple_Athena_C");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, UberGraphFrame) == 0x000790, "Member 'ABGA_AppleSun_Apple_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, PlayerDetector) == 0x000798, "Member 'ABGA_AppleSun_Apple_Athena_C::PlayerDetector' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Applesun_Activate) == 0x0007A0, "Member 'ABGA_AppleSun_Apple_Athena_C::Applesun_Activate' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, AppleSun_Warning_Loop_01) == 0x0007A8, "Member 'ABGA_AppleSun_Apple_Athena_C::AppleSun_Warning_Loop_01' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, FortLinkToActor) == 0x0007B0, "Member 'ABGA_AppleSun_Apple_Athena_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, SidesPawnBlocker) == 0x0007B8, "Member 'ABGA_AppleSun_Apple_Athena_C::SidesPawnBlocker' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Pad) == 0x0007C0, "Member 'ABGA_AppleSun_Apple_Athena_C::Pad' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Box) == 0x0007C8, "Member 'ABGA_AppleSun_Apple_Athena_C::Box' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, P_AppleSun_Spawn) == 0x0007D0, "Member 'ABGA_AppleSun_Apple_Athena_C::P_AppleSun_Spawn' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, P_AppleSun_DespawnTell) == 0x0007D8, "Member 'ABGA_AppleSun_Apple_Athena_C::P_AppleSun_DespawnTell' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4) == 0x0007E0, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate_NewTrack_0_E511D36F4D2E46D8AE33548AA66A76B4' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4) == 0x0007E4, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate__Direction_E511D36F4D2E46D8AE33548AA66A76B4' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BeginDeflate) == 0x0007E8, "Member 'ABGA_AppleSun_Apple_Athena_C::BeginDeflate' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172) == 0x0007F0, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy_Scale_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172) == 0x0007FC, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy_Deflate_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172) == 0x000800, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy__Direction_A5AFC0D0430E50F432FB2FB260534172' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Destroy) == 0x000808, "Member 'ABGA_AppleSun_Apple_Athena_C::Destroy' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, GrowthStart) == 0x000810, "Member 'ABGA_AppleSun_Apple_Athena_C::GrowthStart' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, OverlapLaunchesActivated) == 0x000830, "Member 'ABGA_AppleSun_Apple_Athena_C::OverlapLaunchesActivated' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LaunchCurve) == 0x000838, "Member 'ABGA_AppleSun_Apple_Athena_C::LaunchCurve' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LifespanTimer) == 0x000840, "Member 'ABGA_AppleSun_Apple_Athena_C::LifespanTimer' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TimeoutTellTimer) == 0x000848, "Member 'ABGA_AppleSun_Apple_Athena_C::TimeoutTellTimer' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LaunchAngleWeight) == 0x000850, "Member 'ABGA_AppleSun_Apple_Athena_C::LaunchAngleWeight' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, StartScale) == 0x000858, "Member 'ABGA_AppleSun_Apple_Athena_C::StartScale' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, SpawnFeedbackGC) == 0x000864, "Member 'ABGA_AppleSun_Apple_Athena_C::SpawnFeedbackGC' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, DeathFeedbackGC) == 0x00086C, "Member 'ABGA_AppleSun_Apple_Athena_C::DeathFeedbackGC' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, T_Quest_AppleSun_Use) == 0x000878, "Member 'ABGA_AppleSun_Apple_Athena_C::T_Quest_AppleSun_Use' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, WaterLocation) == 0x000898, "Member 'ABGA_AppleSun_Apple_Athena_C::WaterLocation' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, BounceLocation) == 0x0008A4, "Member 'ABGA_AppleSun_Apple_Athena_C::BounceLocation' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, NewVar_0) == 0x0008B0, "Member 'ABGA_AppleSun_Apple_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, GrowthEnd) == 0x0008B8, "Member 'ABGA_AppleSun_Apple_Athena_C::GrowthEnd' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinLaunch) == 0x0008D8, "Member 'ABGA_AppleSun_Apple_Athena_C::MinLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxLaunch) == 0x0008F8, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, VehicleLaunchMultiplierXY) == 0x000918, "Member 'ABGA_AppleSun_Apple_Athena_C::VehicleLaunchMultiplierXY' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, VehicleLaunchMultiplierZ) == 0x000938, "Member 'ABGA_AppleSun_Apple_Athena_C::VehicleLaunchMultiplierZ' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, ProjectileLaunchMultiplierXY) == 0x000958, "Member 'ABGA_AppleSun_Apple_Athena_C::ProjectileLaunchMultiplierXY' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, ProjectileLaunchMultiplierZ) == 0x000978, "Member 'ABGA_AppleSun_Apple_Athena_C::ProjectileLaunchMultiplierZ' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, Lifespan_) == 0x000998, "Member 'ABGA_AppleSun_Apple_Athena_C::Lifespan_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TimeoutTellDuration_) == 0x0009B8, "Member 'ABGA_AppleSun_Apple_Athena_C::TimeoutTellDuration_' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, HorizontalLaunch) == 0x0009D8, "Member 'ABGA_AppleSun_Apple_Athena_C::HorizontalLaunch' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinNonPawnVelocity) == 0x0009F8, "Member 'ABGA_AppleSun_Apple_Athena_C::MinNonPawnVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxNonPawnVelocity) == 0x0009FC, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxNonPawnVelocity' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LinkedActor) == 0x000A00, "Member 'ABGA_AppleSun_Apple_Athena_C::LinkedActor' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TrackedPlayers) == 0x000A08, "Member 'ABGA_AppleSun_Apple_Athena_C::TrackedPlayers' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, TC_CrashpadPlus) == 0x000A58, "Member 'ABGA_AppleSun_Apple_Athena_C::TC_CrashpadPlus' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MinLaunch_CrashpadPlus) == 0x000A78, "Member 'ABGA_AppleSun_Apple_Athena_C::MinLaunch_CrashpadPlus' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, MaxLaunch_CrashpadPlus) == 0x000A98, "Member 'ABGA_AppleSun_Apple_Athena_C::MaxLaunch_CrashpadPlus' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LastBounceTime) == 0x000AB8, "Member 'ABGA_AppleSun_Apple_Athena_C::LastBounceTime' has a wrong offset!");
static_assert(offsetof(ABGA_AppleSun_Apple_Athena_C, LastBouncedPlayer) == 0x000AC0, "Member 'ABGA_AppleSun_Apple_Athena_C::LastBouncedPlayer' has a wrong offset!");

}

