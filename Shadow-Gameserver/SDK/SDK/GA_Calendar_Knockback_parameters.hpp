#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Calendar_Knockback

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Calendar_Knockback.GA_Calendar_Knockback_C.ExecuteUbergraph_GA_Calendar_Knockback
// 0x00C0 (0x00C0 - 0x0000)
struct GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   K2Node_CustomEvent_GameState;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    K2Node_CustomEvent_Playlist;                       // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_PlaylistContextTags;            // 0x0038(0x0020)(ConstParm)
	struct FGameplayTagContainer                  Temp_struct_Variable;                              // 0x0058(0x0020)()
	class UFortPlaylist*                          Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortGameStateAthena*                   Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_CurrentPlaylistReady*  CallFunc_PlaylistDataReadyAsync_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCreativeModePlaylist_ReturnValue;       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x009C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCalendarEventInformation_bIsEventActive; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeSinceBegin; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeUntilEnd; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCalendarEventInformation_TimeSpanRatio; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback) == 0x000008, "Wrong alignment on GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback");
static_assert(sizeof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback) == 0x0000C0, "Wrong size on GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, EntryPoint) == 0x000000, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000004, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000008, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, K2Node_CustomEvent_GameState) == 0x000028, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::K2Node_CustomEvent_GameState' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, K2Node_CustomEvent_Playlist) == 0x000030, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::K2Node_CustomEvent_Playlist' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, K2Node_CustomEvent_PlaylistContextTags) == 0x000038, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::K2Node_CustomEvent_PlaylistContextTags' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, Temp_struct_Variable) == 0x000058, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, Temp_object_Variable) == 0x000078, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_HasTag_ReturnValue) == 0x000080, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, Temp_object_Variable_1) == 0x000088, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_PlaylistDataReadyAsync_ReturnValue) == 0x000090, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_PlaylistDataReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_IsCreativeModePlaylist_ReturnValue) == 0x000099, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_IsCreativeModePlaylist_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x00009C, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_GetCalendarEventInformation_bIsEventActive) == 0x0000A4, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_GetCalendarEventInformation_bIsEventActive' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_GetCalendarEventInformation_TimeSinceBegin) == 0x0000A8, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_GetCalendarEventInformation_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_GetCalendarEventInformation_TimeUntilEnd) == 0x0000B0, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_GetCalendarEventInformation_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback, CallFunc_GetCalendarEventInformation_TimeSpanRatio) == 0x0000B8, "Member 'GA_Calendar_Knockback_C_ExecuteUbergraph_GA_Calendar_Knockback::CallFunc_GetCalendarEventInformation_TimeSpanRatio' has a wrong offset!");

// Function GA_Calendar_Knockback.GA_Calendar_Knockback_C.OnReady_7389022C4081C8C3936ED1A2932BC0BC
// 0x0030 (0x0030 - 0x0000)
struct GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC final
{
public:
	class AFortGameStateAthena*                   GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPlaylist*                    Playlist;                                          // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  PlaylistContextTags;                               // 0x0010(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC) == 0x000008, "Wrong alignment on GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC");
static_assert(sizeof(GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC) == 0x000030, "Wrong size on GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC");
static_assert(offsetof(GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC, GameState) == 0x000000, "Member 'GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC::GameState' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC, Playlist) == 0x000008, "Member 'GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC::Playlist' has a wrong offset!");
static_assert(offsetof(GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC, PlaylistContextTags) == 0x000010, "Member 'GA_Calendar_Knockback_C_OnReady_7389022C4081C8C3936ED1A2932BC0BC::PlaylistContextTags' has a wrong offset!");

}

